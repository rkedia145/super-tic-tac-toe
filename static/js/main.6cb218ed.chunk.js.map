{"version":3,"sources":["components/Tile.js","components/SmallGrid.js","components/SuperTicTacToe.js","App.js","reportWebVitals.js","index.js"],"names":["Tile","props","prevCoordinate","gameResult","gridResult","value","isEnabled","rowIndex","colIndex","smallGridIndex","handleOnClick","classes","isPrevClick","bgdColor","border","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","backgroundColor","fontSize","height","useStyles","prevCoord","prevSmallGrid","prevRowIndex","prevColIndex","Grid","item","xs","Paper","className","onClick","event","palette","text","secondary","SmallGrid","smallGrid","tiles","counter","row","col","grid","push","container","initializeGame","newGame","largeGrid","i","initializeSmallGrid","currSmallGrid","isCurrSmallGrid","SuperTicTacToe","useState","game","setGame","a","console","log","isFilled","newSmallGrid","coordinatesToIndex","JSON","parse","stringify","currUser","checkSmallGrid","checkLargeGrid","largeGridObj","checkMatch","idx1","idx2","idx3","j","idx","every","val","ind","arr","smallGridTranspose","map","smallGrids","enableAllEiligible","direction","String","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cb218ed.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n// import black from \"@material-ui/core/colors/black\";\n\n\nfunction useStyles(isEnabled, gridResult, isPrevClick) {\n    var bgdColor = 'white';\n    if (gridResult == 1){\n        bgdColor = 'blue';\n    } \n    else if (gridResult == 2){\n        bgdColor = 'green';\n    } else if (gridResult == 3){\n        bgdColor = 'yellow';\n    }\n    else if (isEnabled){\n        bgdColor = 'gray'\n    }\n\n    var border = `1px solid black`\n    if (isPrevClick) {\n        border = `1.5px solid red`\n    }\n\n    const classes = makeStyles((theme) => ({\n        root: {\n        flexGrow: 1,\n        },\n        paper: {\n        padding: theme.spacing(3),\n        textAlign: 'center',\n        //   color: theme.palette.text.secondary,\n        color: 'black',\n        backgroundColor: bgdColor,\n        border: border,\n        fontSize: '1rem',\n        height: '1rem',\n        },\n    }));\n    return classes();\n}\n\nconst Tile = (props) => {\n\n    const isPrevClick = (prevCoord, smallGridIndex, rowIndex, colIndex) => {\n        if (!prevCoord){\n            return false\n        }\n        if (\n            (prevCoord.prevSmallGrid == smallGridIndex) &&\n            (prevCoord.prevRowIndex == rowIndex) && \n            (prevCoord.prevColIndex == colIndex)\n        ) {\n            return true\n        } else {\n            return false\n        }\n    }\n    \n    // extracting necessary fields from the props\n    const {prevCoordinate, gameResult, gridResult, value, isEnabled, rowIndex, colIndex, smallGridIndex, handleOnClick} = props\n    const classes = useStyles(isEnabled, gridResult, isPrevClick(prevCoordinate, smallGridIndex, rowIndex, colIndex));\n\n    const childToParentOnClick = (event) => {\n        if (isEnabled && (gridResult == 0) && (value == 0) && (gameResult == 0)) {\n            handleOnClick(smallGridIndex, rowIndex, colIndex)\n        }\n    }\n\n    return (\n        <Grid item xs={4}>\n          <Paper className={classes.paper} onClick={childToParentOnClick}>{value == 1 ? 'X' : value == 2 ? 'O' : ''}</Paper>\n        </Grid>\n    )\n}\n\nexport default Tile;","import React, {useState, useEffect}  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Tile from './Tile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }\n}));\n\nconst SmallGrid = (props) => {\n  const classes = useStyles();\n\n  // extracting necessary fields from the props\n  const {prevCoordinate, gameResult, isEnabled, smallGridIndex, smallGrid, handleOnClick} = props\n  var tiles = [];\n  var counter = 0;\n  const gridResult = smallGrid.gridResult\n  for (var row = 0; row < 3; row++){\n    for (var col = 0; col < 3; col++){\n      const value = smallGrid.grid[row][col]\n      tiles.push(\n        <Tile prevCoordinate={prevCoordinate} gameResult={gameResult} gridResult={gridResult} value={value} isEnabled={isEnabled} rowIndex={row} colIndex={col} smallGridIndex={smallGridIndex} key={counter} handleOnClick={handleOnClick}/>\n      );\n      counter += 1;\n    }\n  }\n\n  return (\n      <Grid item xs={4} container>\n        {tiles}\n      </Grid>\n  );\n}\n\nexport default SmallGrid","import React, {useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\n\nimport SmallGrid from './SmallGrid';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    border: `1px solid black`,\n    fontSize: '3rem',\n    height: '3rem',\n    // color: theme.palette.text.secondary,\n  },\n}));\n\nconst initializeGame = () => {\n  const newGame = {\n    'currSmallGrid': 4,\n    'gameResult': 0,\n    'currUser': 1,\n    'prevCoordinate': {'prevSmallGrid': -1, 'prevRowIndex': -1, 'prevColIndex': -1},\n  }\n  const largeGrid = [];\n  for (let i = 0; i < 9; i++){\n    largeGrid.push(initializeSmallGrid(i == newGame.currSmallGrid))\n  }\n  newGame.largeGrid = largeGrid\n  return newGame\n}\n\nconst initializeSmallGrid = (isCurrSmallGrid) => {\n  return {\n    'isCurrSmallGrid': isCurrSmallGrid,\n    'grid': [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n    'gridResult': 0,\n  }\n}\n\nconst SuperTicTacToe = (props) => {\n  const [game, setGame] = useState(initializeGame())\n  // const [gameEth, getGame, saveGame, resetGame] = useEthConnector()\n  // const [isLargeGridLoaded, setLargeGridLoaded] = useState(false)\n\n  // Needed if using blockchain as backend\n  // useEffect(() => {\n  //   if (!isLargeGridLoaded) {\n  //     console.log(\"Grid not loaded yet!\")\n  //     getGame()\n  //     console.log(\"Grid now loaded!\")\n  //   }\n\n  //   if (gameEth && !game) {\n  //     setGame(gameEth)\n  //     setLargeGridLoaded(true)\n  //   }\n  // })\n\n  const handleOnClick = async (smallGridIndex, rowIndex, colIndex) => {\n    console.log(\"Current Small Grid: \", game.currSmallGrid)\n    if (!isFilled(smallGridIndex, rowIndex, colIndex)){\n      const newSmallGrid = coordinatesToIndex(rowIndex, colIndex)\n      const newGame = JSON.parse(JSON.stringify(game))\n      newGame.largeGrid[smallGridIndex].grid[rowIndex][colIndex] = game.currUser\n      const [isSolved, gridResult] = checkSmallGrid(smallGridIndex, newGame.largeGrid)\n      newGame.largeGrid[smallGridIndex].gridResult = gridResult\n      newGame.largeGrid[smallGridIndex].grid[rowIndex][colIndex] = game.currUser\n      const gameResult = checkLargeGrid(newGame.largeGrid)\n      const prevCoord = {'prevSmallGrid': smallGridIndex, 'prevRowIndex': rowIndex, 'prevColIndex': colIndex}\n      newGame.currUser = (game.currUser == 1) ? 2 : 1\n      newGame.prevCoordinate = prevCoord\n      newGame.currSmallGrid = newSmallGrid\n      newGame.gameResult = gameResult\n      setGame(newGame)\n\n      // Needed if using blockchain as backend\n      // if (await saveGame(newSmallGrid, smallGridIndex, rowIndex, colIndex, game.currUser, gridResult, gameResult)){\n      //   setGame(newGame)\n      // }\n    }\n  }\n\n  const isFilled = (smallGridIndex, rowIndex, colIndex) => {\n    return game.largeGrid[smallGridIndex].grid[rowIndex][colIndex] > 0\n  }\n\n  const checkLargeGrid = (largeGridObj) => {\n    const checkMatch = (idx1, idx2, idx3) => {\n      return (largeGridObj[idx1].gridResult > 0) &&\n          (largeGridObj[idx1].gridResult == largeGridObj[idx2].gridResult) &&\n          (largeGridObj[idx1].gridResult == largeGridObj[idx3].gridResult)\n    }\n\n    // check horizontal match\n    for (let i = 0; i < 3; i++){\n      var idx1 = coordinatesToIndex(i, 0)\n      var idx2 = coordinatesToIndex(i, 1)\n      var idx3 = coordinatesToIndex(i, 2)\n      if (checkMatch(idx1, idx2, idx3)) {\n        return largeGridObj[idx1].gridResult\n      }\n    }\n\n    // check vertical match\n    for (let i = 0; i < 3; i++){\n      var idx1 = coordinatesToIndex(0, i)\n      var idx2 = coordinatesToIndex(1, i)\n      var idx3 = coordinatesToIndex(2, i)\n      if (checkMatch(idx1, idx2, idx3)) {\n        return largeGridObj[idx1].gridResult\n      }\n    }\n\n    // check diagonal match \n    var idx1 = coordinatesToIndex(0, 0)\n    var idx2 = coordinatesToIndex(1, 1)\n    var idx3 = coordinatesToIndex(2, 2)\n    if (checkMatch(idx1, idx2, idx3)) {\n      return largeGridObj[idx1].gridResult\n    }\n    \n    // check diagonal match \n    var idx1 = coordinatesToIndex(0, 2)\n    var idx2 = coordinatesToIndex(1, 1)\n    var idx3 = coordinatesToIndex(2, 0)\n    if (checkMatch(idx1, idx2, idx3)) {\n      return largeGridObj[idx1].gridResult\n    } \n\n    for (let i = 0; i < 3; i++){\n      for (let j = 0; j < 3; j++){\n        const idx = coordinatesToIndex(i, j)\n        if (largeGridObj[idx].gridResult == 0){\n          return 0\n        }\n      }\n    }\n\n    return 3\n  }\n\n  const checkSmallGrid = (smallGridIndex, largeGridObj) => {\n    const smallGrid = largeGridObj[smallGridIndex].grid\n\n    // check horizontal match\n    for (let i = 0; i < 3; i++) {\n      if (smallGrid[i].every((val, ind, arr) => val === arr[0]) && (smallGrid[i][0] != 0)){\n        return [true, smallGrid[i][0]]\n      }\n    }\n\n    // check vertical match\n    const smallGridTranspose = smallGrid[0].map((col, i) => smallGrid.map(row => row[i]));\n    for (let i = 0; i < 3; i++) {\n      if (smallGridTranspose[i].every((val, ind, arr) => val === arr[0]) && (smallGridTranspose[i][0] != 0)){\n        return [true, smallGridTranspose[i][0]]\n      }\n    }\n\n    // check diagonal match\n    if ((smallGrid[0][0] == smallGrid[1][1]) &&  (smallGrid[0][0] == smallGrid[2][2]) && (smallGrid[0][0] != 0)) {\n      return [true, smallGridTranspose[0][0]]\n    }\n\n    // check diagonal match\n    if ((smallGrid[0][2] == smallGrid[1][1]) &&  (smallGrid[0][2] == smallGrid[2][0]) && (smallGrid[0][2] != 0)) {\n      return [true, smallGridTranspose[0][2]]\n    }\n\n    for (let i = 0; i < 3; i++){\n      for (let j = 0; j < 3; j++){\n        if (smallGrid[i][j] == 0){\n          return [false, 0]\n        }\n      }\n    }\n\n    return [false, 3]\n  }\n\n  const coordinatesToIndex = (rowIndex, colIndex) => {\n    const index = (3 * rowIndex) + colIndex\n    return index\n  }\n\n  const reset = (event) => {\n    // await resetGame()\n    // setLargeGridLoaded(false)\n    setGame(initializeGame())\n    console.log(\"Just reset state! \")\n  }\n\n  // Rendering of Large Grid\n  const classes = useStyles();\n\n  var smallGrids = [];\n  if (game) {\n    const enableAllEiligible = game.largeGrid[game.currSmallGrid].gridResult > 0\n    for (var idx = 0; idx < 9; idx++){\n      const isEnabled = idx==game.currSmallGrid\n      smallGrids.push(\n        <SmallGrid prevCoordinate={game.prevCoordinate} gameResult={game.gameResult} isEnabled={(isEnabled || enableAllEiligible)} smallGridIndex={idx} key={idx} smallGrid={game.largeGrid[idx]} handleOnClick={handleOnClick}/>\n      );\n    }\n  }\n\n  const status = () => {\n    if (game) {\n      if (game.gameResult > 0) {\n        return \"Player \" + String(game.gameResult) + \" won !!!\"\n      } else {\n        return \"Player \" + String(game.currUser) + \"'s turn\"\n      }\n    } else {\n      return \"Game is loading...\"\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n    {\n      game ? \n      <Grid container spacing={1} direction='column'>\n        <Paper className={classes.paper}>{status()}</Paper>\n        <Grid item xs={12} container spacing={2}>\n          {smallGrids}\n        </Grid>\n        <Button onClick={reset}>Reset</Button>\n      </Grid>\n      : 'Grid is loading...'\n    }\n  </div>\n  );\n}\n\nexport default SuperTicTacToe;","// dependencies\nimport React from 'react'\n\n// component dependencies\nimport SuperTicTacToe from './components/SuperTicTacToe';\n\nconst App = (props) => {\n    return (\n        <div>\n          <SuperTicTacToe />\n        </div>\n    );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}